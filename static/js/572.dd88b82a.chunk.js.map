{"version":3,"file":"static/js/572.dd88b82a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/Loader/Loader.js","components/EditedContact/EditedContact.styled.js","components/EditedContact/EditedContact.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsContactAdded } from 'redux/contacts/selectors';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  useToast,\n  Icon,\n} from '@chakra-ui/react';\nimport { IoPersonAddOutline } from 'react-icons/io5';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isContactAdded = useSelector(selectIsContactAdded);\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const isNumberDublicated = number => {\n    return contacts.some(contact => contact.number === number);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const newContact = contacts.find(contact => contact.name === name);\n    if (newContact && isContactAdded) {\n      toast({\n        position: 'top',\n        render: () => (\n          <Box\n            color=\"white\"\n            p={3}\n            bg=\"#e84a5f\"\n            borderRadius=\"10px\"\n            textAlign=\"center\"\n          >\n            Contact wiht name: {name} have already included in your phonebook\n          </Box>\n        ),\n      });\n      return;\n    }\n\n    if (isNumberDublicated(number)) {\n      toast({\n        position: 'top',\n        render: () => (\n          <Box\n            color=\"white\"\n            p={3}\n            bg=\"#e84a5f\"\n            borderRadius=\"10px\"\n            textAlign=\"center\"\n          >\n            The number: {number} have already included to your phonebook\n          </Box>\n        ),\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n\n    toast({\n      position: 'top',\n      render: () => (\n        <Box\n          color=\"white\"\n          p={3}\n          bg=\"#5F8D4E\"\n          borderRadius=\"10px\"\n          textAlign=\"center\"\n        >\n          The new contact wiht name: {name} was created successfully\n        </Box>\n      ),\n    });\n\n    form.reset();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      maxWidth=\"660px\"\n      width=\"100%\"\n      minWidth=\"200px\"\n      padding=\"10px\"\n      onSubmit={handleSubmit}\n      textAlign=\"center\"\n      display=\"flex\"\n      gap=\"15px\"\n      alignItems=\"center\"\n    >\n      <FormControl isRequired>\n        <FormLabel\n          fontFamily=\"Merriweather Sans\"\n          fontWeight={400}\n          fontSize={{ base: '18px', md: '24px' }}\n          color=\"#497a86\"\n          mb=\"auto\"\n        >\n          Name\n        </FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          borderColor=\"#89d3da\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n          required\n          autoComplete=\"name\"\n          placeholder=\"Enter name\"\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel\n          fontFamily=\"Merriweather Sans\"\n          fontWeight={400}\n          fontSize={{ base: '18px', md: '24px' }}\n          color=\"#497a86\"\n          mb=\"auto\"\n        >\n          Number\n        </FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          borderColor=\"#89d3da\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n          required\n          placeholder=\"Enter phone number\"\n        />\n      </FormControl>\n      <Button\n        borderRadius=\"50%\"\n        mt=\"auto\"\n        w={{ base: '30px', md: '50px' }}\n        h={{ base: '30px', md: '50px' }}\n        minWidth=\"auto\"\n        bg=\"#80B3FF\"\n        color=\"white\"\n        _hover={{\n          bg: '#0cc0df',\n          borderColor: 'transparent',\n          color: '#fff',\n        }}\n        type=\"submit\"\n      >\n        {!isContactAdded ? (\n          <CircularProgress isIndeterminate size=\"24px\" color=\"#188C69\" />\n        ) : (\n          <Icon as={IoPersonAddOutline} w={5} h={5} color=\"white\" />\n        )}\n      </Button>\n    </Box>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst LoaderSpinner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"#192655\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"32\"\n      visible={true}\n    />\n  );\n};\n\nexport default LoaderSpinner;","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 4px;\n  \n\n  .saveButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    transition: all 0.3s ease-in-out;\n    font-size: 22px;\n    color: white;\n    background: #80B3FF;\n    @media (max-width: 768px) {\n    width: 30px;\n    height: 30px;\n  }\n\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: #0cc0df;\n      color: white;\n      box-shadow: 0px 0px 10px 5px rgba(0, 0, 255, 0.4);\n      border-color=\"#89d3da\";\n    }\n  }\n\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { VscSaveAs } from 'react-icons/vsc';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport * as yup from 'yup';\nimport { FormStyled } from './EditedContact.styled';\n\nimport React from 'react';\nimport { Input } from '@chakra-ui/react';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(3).max(32).required(),\n    number: yup.string().min(3).max(16).required(),\n  })\n  .required();\n\nconst EditContact = ({ id, toggleEdit, name, number }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: { name, number },\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }) => {\n    const newContact = {\n      name,\n      number,\n      id,\n    };\n    dispatch(editContact(newContact));\n\n    toggleEdit();\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Input\n        border=\"solid\"\n        borderColor=\"#89d3da\"\n        borderWidth=\"1px\"\n        w={{ base: '120px', md: '200px' }}\n        fontSize={{ base: '14px', md: '18px' }}\n        mw=\"100%\"\n        background=\"#fff\"\n        paddingX=\"5px\"\n        paddingY=\"5px\"\n        borderRadius=\"20px\"\n        color=\"#192655\"\n        _hover={{\n          borderColor: '#3182ce',\n          boxShadow: '0px 0px 10px 5px rgba(0, 0, 255, 0.4)',\n        }}\n        type=\"text\"\n        {...register('name')}\n        autoFocus\n        autoComplete=\"name\"\n      />\n\n      <Input\n        border=\"solid\"\n        borderColor=\"#89d3da\"\n        borderWidth=\"1px\"\n        w={{ base: '120px', md: '200px' }}\n        fontSize={{ base: '14px', md: '18px' }}\n        mw=\"100%\"\n        background=\"#fff\"\n        paddingX=\"5px\"\n        paddingY=\"5px\"\n        borderRadius=\"20px\"\n        color=\"#192655\"\n        _hover={{\n          borderColor: '#3182ce',\n          boxShadow: '0px 0px 10px 5px rgba(0, 0, 255, 0.4)',\n        }}\n        type=\"text\"\n        {...register('number')}\n        autoComplete=\"number\"\n      />\n      <button className=\"saveButton\" type=\"submit\">\n        <VscSaveAs />\n      </button>\n    </FormStyled>\n  );\n};\n\nexport default EditContact;\n","import { useDispatch } from 'react-redux';\nimport { LuClipboardEdit } from 'react-icons/lu';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Flex,\n  HStack,\n  VStack,\n  Avatar,\n  Text,\n  Circle,\n  Icon,\n} from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport LoaderSpinner from 'components/Loader/Loader';\nimport EditContact from 'components/EditedContact/EditedContact';\n\nexport const ContactElement = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isDelete, setIsDelete] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const onDelete = id => {\n    setIsDelete(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => setIsDelete(false));\n  };\n  const toggleEdit = () => {\n    setIsEdit(!isEdit);\n  };\n  const firstLetter = name.charAt(0);\n\n  return (\n    <Flex\n      as=\"li\"\n      borderBottom=\"1px\"\n      paddingY=\"8px\"\n      justify=\"space-between\"\n      align=\"center\"\n    >\n      {isEdit ? (\n        <EditContact\n          id={id}\n          toggleEdit={toggleEdit}\n          name={name}\n          number={number}\n        />\n      ) : (\n        <>\n          <HStack>\n            <Avatar\n              name={firstLetter}\n              color=\"white\"\n              w={{ base: '30px', md: '50px' }}\n              h={{ base: '30px', md: '50px' }}\n              borderRadius=\"50%\"\n              bg=\"#80B3FF\"\n            />\n            <VStack\n              justify=\"flex-start\"\n              align=\"self-start\"\n              minW=\"100px\"\n              mr=\"10px\"\n            >\n              <Text\n                fontFamily=\"Merriweather Sans\"\n                fontWeight={300}\n                fontSize={{ base: '14px', md: '18px' }}\n              >\n                {name}\n              </Text>\n              <Text\n                fontFamily=\"Merriweather Sans\"\n                fontWeight={300}\n                fontSize={{ base: '14px', md: '18px' }}\n              >\n                {number}\n              </Text>\n            </VStack>\n          </HStack>\n          <HStack justify=\"flex-end\" align=\"self-end\">\n            <Circle\n              size={{ base: '30px', md: '50px' }}\n              bg=\"#80B3FF\"\n              color=\"white\"\n              type=\"button\"\n              onClick={toggleEdit}\n              _hover={{\n                bg: '#0cc0df',\n                borderColor: 'transparent',\n                color: '#fff',\n              }}\n            >\n              <Icon as={LuClipboardEdit} w={5} h={5} color=\"white\" />\n            </Circle>\n            <Circle\n              size={{ base: '30px', md: '50px' }}\n              bg=\"#80B3FF\"\n              color=\"white\"\n              type=\"button\"\n              disabled={isDelete}\n              onClick={() => onDelete(id)}\n              _hover={{\n                bg: '#0cc0df',\n                borderColor: 'transparent',\n                color: '#fff',\n              }}\n            >\n              {isDelete ? <LoaderSpinner /> : <DeleteIcon />}\n            </Circle>\n          </HStack>\n        </>\n      )}\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactElement } from 'components/ContactElement/ContactElement';\nimport { UnorderedList } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <UnorderedList paddingX=\"10px\" m=\"0\">\n      {contacts?.map(({ id, name, number }) => {\n        return <ContactElement key={id} id={id} name={name} number={number} />;\n      })}\n    </UnorderedList>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\nimport { Text, VStack, Input } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    return dispatch(setFilterValue(event.target.value));\n  };\n\n  return (\n    <VStack gap=\"5px\" justify=\"space-between\" mb=\"5px\">\n      <Text\n        fontFamily=\"Merriweather Sans\"\n        fontWeight={300}\n        fontSize={{ base: '16px', md: '24px' }}\n        color=\"#497a86\"\n      >\n        Find contacts by name:\n      </Text>\n      <Input\n        maxW=\"600px\"\n        w=\"100%\"\n        minW=\"200px\"\n        marginInlineStart=\"0px\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n        borderColor=\"#89d3da\"\n        borderWidth=\"1px\"\n        bg=\"#fff\"\n      />\n    </VStack>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport emptyImg from '../../images/emptyImg.png';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  Box,\n  Heading,\n  Container,\n  CircularProgress,\n  Text,\n  Image,\n  Center,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1190px)' });\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box as=\"main\" bg=\"#98b7d545\" h=\"100vh\">\n      <Container maxW=\"100%\" marginX=\"auto\" paddingX=\"10px\">\n        <Box gap=\"5px\" justifyItems=\"center\" display=\"grid\">\n          <Heading\n            marginTop=\"10px\"\n            align=\"center\"\n            fontFamily=\"Merriweather Sans\"\n            fontWeight={400}\n            fontSize={{ base: '16px', md: '24px' }}\n            color=\"#497a86\"\n          >\n            Please, input name & number for a creation a new contact\n          </Heading>\n          <ContactForm />\n          <Box padding=\"10px\" maxWidth=\"660px\" minWidth=\"200px\" width=\"100%\">\n            <Heading\n              align=\"center\"\n              fontFamily=\"Merriweather Sans\"\n              fontWeight=\"bold\"\n              fontSize={isTabletOrMobile ? '18px' : '28px'}\n              mb=\"10px\"\n              color=\"#497a86\"\n            >\n              Contacts\n            </Heading>\n            {contacts?.length === 0 ? (\n              <Center flexDirection=\"column\">\n                <Text\n                  fontWeight=\"bold\"\n                  color=\"#497a86\"\n                  fontFamily=\"Merriweather Sans\"\n                  fontSize={isTabletOrMobile ? '18px' : '24px'}\n                  mb=\"10px\"\n                >\n                  ...Here is empty\n                </Text>\n                <Image\n                  src={emptyImg}\n                  alt=\"empty image\"\n                  boxSize=\"150px\"\n                  fill=\"#497a86\"\n                />\n              </Center>\n            ) : (\n              <div>\n                {isLoading && (\n                  <CircularProgress\n                    isIndeterminate\n                    size=\"24px\"\n                    color=\"#0cc0df\"\n                  />\n                )}\n                {!isLoading && contacts.length > 0 && <Filter />}\n\n                {error && <p>Something goes wrong</p>}\n                {!isLoading && contacts.length > 0 && (\n                  <Box overflowY=\"auto\" h=\"100vh\">\n                    <ContactList />\n                  </Box>\n                )}\n              </div>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsContactAdded = state => state.contacts.isContactAdded;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return filteredContacts;\n  }\n);\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","isContactAdded","selectIsContactAdded","dispatch","useDispatch","toast","useToast","handleChange","event","_event$target","target","value","_jsxs","Box","as","maxWidth","width","minWidth","padding","onSubmit","preventDefault","form","elements","find","contact","position","render","color","p","bg","borderRadius","textAlign","children","some","isNumberDublicated","addContact","reset","display","gap","alignItems","FormControl","isRequired","_jsx","FormLabel","fontFamily","fontWeight","fontSize","base","md","mb","Input","type","onChange","pattern","title","borderColor","borderWidth","required","autoComplete","placeholder","Button","mt","w","h","_hover","Icon","IoPersonAddOutline","CircularProgress","isIndeterminate","size","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","FormStyled","styled","_templateObject","_taggedTemplateLiteral","schema","yup","min","max","_ref","id","toggleEdit","_useForm","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","_ref2","newContact","editContact","_objectSpread","border","mw","background","paddingX","paddingY","boxShadow","autoFocus","className","VscSaveAs","ContactElement","isDelete","setIsDelete","isEdit","setIsEdit","firstLetter","charAt","Flex","borderBottom","justify","align","EditContact","_Fragment","HStack","Avatar","VStack","minW","mr","Text","Circle","onClick","LuClipboardEdit","disabled","deleteContact","unwrap","then","onDelete","LoaderSpinner","DeleteIcon","ContactList","selectVisibleContacts","UnorderedList","m","map","Filter","maxW","marginInlineStart","setFilterValue","Contacts","error","selectError","isLoading","selectIsLoading","isTabletOrMobile","useMediaQuery","query","useEffect","fetchContacts","Container","marginX","justifyItems","Heading","marginTop","length","Center","flexDirection","Image","src","emptyImg","alt","boxSize","fill","overflowY","state","items","createSelector","filter","normalizedFilter","toLowerCase","includes"],"sourceRoot":""}