{"version":3,"file":"static/js/51.b6fb85d3.chunk.js","mappings":"+VAcaA,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAwERC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,OAAtBlB,EAAIiB,EAAJjB,KAAMmB,EAAKF,EAALE,MACd,OAAQnB,GACN,IAAK,OACHC,EAAQkB,GACR,MACF,IAAK,SACHd,EAAUc,GACV,MACF,QACE,OAEN,EAEA,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,GAAG,OACHC,SAAS,QACTC,MAAM,MACNC,SAAS,QACTC,QAAQ,OACRC,SAvFiB,SAAAX,GACnBA,EAAMY,iBAEN,IAAMC,EAAOb,EAAME,OACblB,EAAO6B,EAAKC,SAAS9B,KAAKmB,MAC1Bf,EAASyB,EAAKC,SAAS1B,OAAOe,MAEjBb,EAASyB,MAAK,SAAAC,GAAO,OAAIA,EAAQhC,OAASA,CAAI,KAC/CS,EAChBI,EAAM,CACJoB,SAAU,MACVC,OAAQ,kBACNd,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFc,MAAM,QACNC,EAAG,EACHC,GAAG,UACHC,aAAa,OACbC,UAAU,SAAQC,SAAA,CACnB,sBACqBxC,EAAK,6CACrB,KAxBa,SAAAI,GACzB,OAAOE,EAASmC,MAAK,SAAAT,GAAO,OAAIA,EAAQ5B,SAAWA,CAAM,GAC3D,CA4BMsC,CAAmBtC,IAkBvBO,GAASgC,EAAAA,EAAAA,IAAW,CAAE3C,KAAAA,EAAMI,OAAAA,KAC5BH,EAAQ,IACRI,EAAU,IAEVQ,EAAM,CACJoB,SAAU,MACVC,OAAQ,kBACNd,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFc,MAAM,QACNC,EAAG,EACHC,GAAG,UACHC,aAAa,OACbC,UAAU,SAAQC,SAAA,CACnB,8BAC6BxC,EAAK,8BAC7B,IAIV6B,EAAKe,SApCH/B,EAAM,CACJoB,SAAU,MACVC,OAAQ,kBACNd,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFc,MAAM,QACNC,EAAG,EACHC,GAAG,UACHC,aAAa,OACbC,UAAU,SAAQC,SAAA,CACnB,eACcpC,EAAO,6CAChB,GA0Bd,EAwBImC,UAAU,SAAQC,SAAA,EAElBpB,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,YAAU,EAACC,GAAG,OAAMP,SAAA,EAC/BQ,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,WAAW,oBACXC,WAAY,IACZC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BnB,MAAM,UAASK,SAChB,UAGDQ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,KAAK,OACLxD,KAAK,OACLyD,SAAU1C,EACVI,MAAOnB,EACP0D,QAAQ,2HACRC,MAAM,yIACNC,YAAY,UACZC,YAAY,MACZxB,GAAG,OACHyB,UAAQ,EACRC,aAAa,OACbC,YAAY,mBAGhB5C,EAAAA,EAAAA,MAACyB,EAAAA,GAAW,CAACC,YAAU,EAACC,GAAG,OAAMP,SAAA,EAC/BQ,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,WAAW,oBACXC,WAAY,IACZC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BnB,MAAM,UAASK,SAChB,YAGDQ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJC,KAAK,MACLxD,KAAK,SACLyD,SAAU1C,EACVI,MAAOf,EACPsD,QAAQ,iGACRC,MAAM,+FACNC,YAAY,UACZC,YAAY,MACZxB,GAAG,OACHyB,UAAQ,EACRE,YAAY,2BAGhBhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLf,WAAW,oBACXC,WAAW,OACXC,SAAS,OACTI,KAAK,SACLU,SAAS,OACTC,SAAS,OACTC,EAAE,QACFR,YAAY,UACZC,YAAY,MACZ1B,MAAM,UACNkC,OAAQ,CAAEhC,GAAI,UAAWuB,YAAa,cAAezB,MAAO,QAASK,SAEnE/B,EAGA,eAFAuC,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CAACC,iBAAe,EAACC,KAAK,OAAOrC,MAAM,gBAO9D,E,yFC1KA,EAZsB,WACpB,OACEa,EAAAA,EAAAA,KAACyB,EAAAA,GAAa,CACZC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBpD,MAAM,KACNqD,SAAS,GAGf,E,2DCVaC,E,QAAaC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6mBCS/BC,EAASC,EAAAA,GACL,CACNnF,KAAMmF,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIvB,WAClC1D,OAAQ+E,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIvB,aAErCA,WAgCH,EA9BoB,SAAHwB,GAA0C,IAApCC,EAAED,EAAFC,GAAIC,EAAUF,EAAVE,WAAYxF,EAAIsF,EAAJtF,KAAMI,EAAMkF,EAANlF,OAC3CqF,GAAmCC,EAAAA,EAAAA,IAAQ,CACzCC,cAAe,CAAE3F,KAAAA,EAAMI,OAAAA,GACvBwF,UAAUC,EAAAA,EAAAA,GAAYX,KAFhBY,EAAQL,EAARK,SAAUC,EAAYN,EAAZM,aAIZpF,GAAWC,EAAAA,EAAAA,MAajB,OACEQ,EAAAA,EAAAA,MAAC0D,EAAU,CAACnD,SAAUoE,GAZP,SAAHC,GAA0B,IAChCC,EAAa,CACjBjG,KAFoBgG,EAAJhG,KAGhBI,OAH4B4F,EAAN5F,OAItBmF,GAAAA,GAEF5E,GAASuF,EAAAA,EAAAA,IAAYD,IAErBT,GACF,IAGgDzB,aAAa,MAAKvB,SAAA,EAC9DQ,EAAAA,EAAAA,KAAA,SAAAmD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAO3C,KAAK,QAAWsC,EAAS,SAAO,IAAEM,WAAS,EAACrC,aAAa,WAEhEf,EAAAA,EAAAA,KAAA,SAAAmD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAO3C,KAAK,QAAWsC,EAAS,WAAS,IAAE/B,aAAa,aACxDf,EAAAA,EAAAA,KAAA,UAAQqD,UAAU,aAAa7C,KAAK,SAAQhB,UAC1CQ,EAAAA,EAAAA,KAACsD,EAAAA,IAAS,QAIlB,EC7BaC,EAAiB,SAAHjB,GAA8B,IAAxBC,EAAED,EAAFC,GAAIvF,EAAIsF,EAAJtF,KAAMI,EAAMkF,EAANlF,OACnCO,GAAWC,EAAAA,EAAAA,MACjBhB,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxC4G,EAAQ1G,EAAA,GAAE2G,EAAW3G,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCwG,EAAMvG,EAAA,GAAEwG,EAASxG,EAAA,GAOlBqF,EAAa,WACjBmB,GAAWD,EACb,EACME,EAAc5G,EAAK6G,OAAO,GAEhC,OACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAI,CACHxF,GAAG,KACHyF,aAAa,MACb5C,SAAS,MACT6C,QAAQ,gBACRC,MAAM,SAAQzE,SAEbkE,GACC1D,EAAAA,EAAAA,KAACkE,EAAW,CACV3B,GAAIA,EACJC,WAAYA,EACZxF,KAAMA,EACNI,OAAQA,KAGVgB,EAAAA,EAAAA,MAAA+F,EAAAA,SAAA,CAAA3E,SAAA,EACEpB,EAAAA,EAAAA,MAACgG,EAAAA,EAAM,CAAA5E,SAAA,EACLQ,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CACLrH,KAAM4G,EACNzE,MAAM,QACNiC,EAAG,CAAEf,KAAM,OAAQC,GAAI,QACvBgE,EAAG,CAAEjE,KAAM,OAAQC,GAAI,QACvBhB,aAAa,MACbD,GAAG,aAELjB,EAAAA,EAAAA,MAACmG,EAAAA,EAAM,CACLP,QAAQ,aACRC,MAAM,aACNO,KAAK,QACLC,GAAG,OAAMjF,SAAA,EAETQ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAI,CACHxE,WAAW,oBACXC,WAAY,IACZC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAASd,SAEtCxC,KAEHgD,EAAAA,EAAAA,KAAC0E,EAAAA,EAAI,CACHxE,WAAW,oBACXC,WAAY,IACZC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAASd,SAEtCpC,WAIPgB,EAAAA,EAAAA,MAACgG,EAAAA,EAAM,CAACJ,QAAQ,WAAWC,MAAM,WAAUzE,SAAA,EACzCQ,EAAAA,EAAAA,KAAC2E,EAAAA,GAAM,CACLnD,KAAM,CAAEnB,KAAM,OAAQC,GAAI,QAC1BjB,GAAG,UACHF,MAAM,QACNqB,KAAK,SACLoE,QAASpC,EACTnB,OAAQ,CACNhC,GAAI,UACJuB,YAAa,cACbzB,MAAO,QACPK,UAEFQ,EAAAA,EAAAA,KAAC6E,EAAAA,EAAI,CAACvG,GAAIwG,EAAAA,IAAiB1D,EAAG,EAAGkD,EAAG,EAAGnF,MAAM,aAE/Ca,EAAAA,EAAAA,KAAC2E,EAAAA,GAAM,CACLnD,KAAM,CAAEnB,KAAM,OAAQC,GAAI,QAC1BjB,GAAG,UACHF,MAAM,QACNqB,KAAK,SACLuE,SAAUvB,EACVoB,QAAS,kBAhFJ,SAAArC,GACfkB,GAAY,GACZ9F,GAASqH,EAAAA,EAAAA,IAAczC,IACpB0C,SACAC,MAAK,kBAAMzB,GAAY,EAAM,GAClC,CA2E2B0B,CAAS5C,EAAG,EAC3BlB,OAAQ,CACNhC,GAAI,UACJuB,YAAa,cACbzB,MAAO,QACPK,SAEDgE,GAAWxD,EAAAA,EAAAA,KAACoF,EAAa,KAAMpF,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,aAOzD,E,UC9GaC,EAAc,WACzB,IAAMhI,GAAWC,EAAAA,EAAAA,IAAYgI,EAAAA,IAE7B,OACEvF,EAAAA,EAAAA,KAACwF,EAAAA,GAAa,CAACtE,SAAS,OAAOuE,EAAE,IAAGjG,SACzB,OAARlC,QAAQ,IAARA,OAAQ,EAARA,EAAUoI,KAAI,SAAApD,GAA2B,IAAxBC,EAAED,EAAFC,GAAIvF,EAAIsF,EAAJtF,KAAMI,EAAMkF,EAANlF,OAC1B,OAAO4C,EAAAA,EAAAA,KAACuD,EAAc,CAAUhB,GAAIA,EAAIvF,KAAMA,EAAMI,OAAQA,GAAhCmF,EAC9B,KAGN,E,UCXaoD,EAAS,WACpB,IAAMhI,GAAWC,EAAAA,EAAAA,MAMjB,OACEQ,EAAAA,EAAAA,MAACmG,EAAAA,EAAM,CAACqB,IAAI,MAAM5B,QAAQ,gBAAgBjE,GAAG,MAAKP,SAAA,EAChDQ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAI,CACHxE,WAAW,oBACXC,WAAY,IACZC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BnB,MAAM,UAASK,SAChB,4BAGDQ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJsF,KAAK,QACLzE,EAAE,OACFoD,KAAK,QACLsB,kBAAkB,MAClBtF,KAAK,OACLxD,KAAK,SACLyD,SArBqB,SAAAzC,GACzB,OAAOL,GAASoI,EAAAA,EAAAA,GAAe/H,EAAME,OAAOC,OAC9C,EAoBMyC,YAAY,UACZC,YAAY,MACZxB,GAAG,WAIX,E,kDCZe,SAAS2G,IACtB,IAAMrI,GAAWC,EAAAA,EAAAA,MACXqI,GAAQ1I,EAAAA,EAAAA,IAAY2I,EAAAA,IACpBC,GAAY5I,EAAAA,EAAAA,IAAY6I,EAAAA,IACxB9I,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB6I,GAAmBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBAMhD,OAJAC,EAAAA,EAAAA,YAAU,WACR7I,GAAS8I,EAAAA,EAAAA,MACX,GAAG,CAAC9I,KAGFqC,EAAAA,EAAAA,KAAC3B,EAAAA,GAAG,CACFC,GAAG,OACHe,GAAG,YACHG,UAEApB,EAAAA,EAAAA,MAACsI,EAAAA,EAAS,CAACb,KAAK,OAAOc,QAAQ,OAAOzF,SAAS,OAAO7B,GAAG,YAAWG,SAAA,EAClEQ,EAAAA,EAAAA,KAAC4G,EAAAA,EAAO,CACN3C,MAAM,SACN4C,GAAG,OACH9G,GAAG,OACHG,WAAW,oBACXC,WAAY,IACZC,SAAUiG,EAAmB,OAAS,OACtClH,MAAM,UAASK,SAChB,uCAGDpB,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACuH,IAAI,MAAMkB,aAAa,SAASC,QAAQ,OAAMvH,SAAA,EACjDQ,EAAAA,EAAAA,KAAC4G,EAAAA,EAAO,CACN3C,MAAM,SACN/D,WAAW,oBACXC,WAAY,IACZC,SAAUiG,EAAmB,OAAS,OACtClH,MAAM,UAASK,SAChB,8DAGDQ,EAAAA,EAAAA,KAACrD,EAAW,KACZyB,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACK,QAAQ,OAAOH,SAAS,QAAQE,SAAS,QAAQD,MAAM,OAAMgB,SAAA,EAChEQ,EAAAA,EAAAA,KAAC4G,EAAAA,EAAO,CACN3C,MAAM,SACN/D,WAAW,oBACXC,WAAW,OACXC,SAAUiG,EAAmB,OAAS,OACtCtG,GAAG,OACHZ,MAAM,UAASK,SAChB,aAGqB,KAAb,OAARlC,QAAQ,IAARA,OAAQ,EAARA,EAAU0J,SACT5I,EAAAA,EAAAA,MAAC6I,EAAAA,EAAM,CAACC,cAAc,SAAQ1H,SAAA,EAC5BQ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAI,CACHvE,WAAW,OACXhB,MAAM,UACNe,WAAW,oBACXE,SAAUiG,EAAmB,OAAS,OACtCtG,GAAG,OAAMP,SACV,sBAGDQ,EAAAA,EAAAA,KAACmH,EAAAA,EAAK,CACJC,IAAKC,EACLC,IAAI,cACJC,QAAQ,QACRC,KAAK,gBAITpJ,EAAAA,EAAAA,MAAA,OAAAoB,SAAA,CACG2G,IACCnG,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CACfC,iBAAe,EACfC,KAAK,OACLrC,MAAM,aAGRgH,GAAa7I,EAAS0J,OAAS,IAAKhH,EAAAA,EAAAA,KAAC2F,EAAM,IAE5CM,IAASjG,EAAAA,EAAAA,KAAA,KAAAR,SAAG,0BACX2G,GAAa7I,EAAS0J,OAAS,IAC/BhH,EAAAA,EAAAA,KAAC3B,EAAAA,GAAG,CAACoJ,UAAU,OAAOnD,EAAE,QAAO9E,UAC7BQ,EAAAA,EAAAA,KAACsF,EAAW,mBAUhC,C,sKClHa9H,EAAiB,SAAAkK,GAAK,OAAIA,EAAMpK,SAASqK,KAAM,EAE/CvB,EAAkB,SAAAsB,GAAK,OAAIA,EAAMpK,SAAS6I,SAAU,EAEpDzI,EAAuB,SAAAgK,GAAK,OAAIA,EAAMpK,SAASG,cAAe,EAE9DyI,EAAc,SAAAwB,GAAK,OAAIA,EAAMpK,SAAS2I,KAAM,EAI5CV,GAAwBqC,EAAAA,EAAAA,IACnC,CAH0B,SAAAF,GAAK,OAAIA,EAAMG,MAAO,EAGjCrK,IACf,SAACqK,EAAQvK,GACP,IAAMwK,EAAmBD,EAAOE,cAKhC,OAJyBzK,EAASuK,QAAO,SAAA7I,GAAO,OAC9CA,EAAQhC,KAAK+K,cAAcC,SAASF,EAAiB,GAIzD,G","sources":["components/ContactForm/ContactForm.js","components/Loader/Loader.js","components/EditedContact/EditedContact.styled.js","components/EditedContact/EditedContact.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsContactAdded } from 'redux/contacts/selectors';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  useToast,\n} from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isContactAdded = useSelector(selectIsContactAdded);\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const isNumberDublicated = number => {\n    return contacts.some(contact => contact.number === number);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const newContact = contacts.find(contact => contact.name === name);\n    if (newContact && isContactAdded) {\n      toast({\n        position: 'top',\n        render: () => (\n          <Box\n            color=\"white\"\n            p={3}\n            bg=\"#e84a5f\"\n            borderRadius=\"10px\"\n            textAlign=\"center\"\n          >\n            Contact wiht name: {name} have already included in your phonebook\n          </Box>\n        ),\n      });\n      return;\n    }\n\n    if (isNumberDublicated(number)) {\n      toast({\n        position: 'top',\n        render: () => (\n          <Box\n            color=\"white\"\n            p={3}\n            bg=\"#e84a5f\"\n            borderRadius=\"10px\"\n            textAlign=\"center\"\n          >\n            The number: {number} have already included to your phonebook\n          </Box>\n        ),\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n\n    toast({\n      position: 'top',\n      render: () => (\n        <Box\n          color=\"white\"\n          p={3}\n          bg=\"#5F8D4E\"\n          borderRadius=\"10px\"\n          textAlign=\"center\"\n        >\n          The new contact wiht name: {name} was created successfully\n        </Box>\n      ),\n    });\n\n    form.reset();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      maxWidth=\"660px\"\n      width=\"50%\"\n      minWidth=\"200px\"\n      padding=\"10px\"\n      onSubmit={handleSubmit}\n      textAlign=\"center\"\n    >\n      <FormControl isRequired mb=\"32px\">\n        <FormLabel\n          fontFamily=\"Merriweather Sans\"\n          fontWeight={400}\n          fontSize={{ base: '18px', md: '24px' }}\n          color=\"#497a86\"\n        >\n          Name\n        </FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          borderColor=\"#89d3da\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n          required\n          autoComplete=\"name\"\n          placeholder=\"Enter name\"\n        />\n      </FormControl>\n      <FormControl isRequired mb=\"32px\">\n        <FormLabel\n          fontFamily=\"Merriweather Sans\"\n          fontWeight={400}\n          fontSize={{ base: '18px', md: '24px' }}\n          color=\"#497a86\"\n        >\n          Number\n        </FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          borderColor=\"#89d3da\"\n          borderWidth=\"1px\"\n          bg=\"#fff\"\n          required\n          placeholder=\"Enter phone number\"\n        />\n      </FormControl>\n      <Button\n        fontFamily=\"Merriweather Sans\"\n        fontWeight=\"bold\"\n        fontSize=\"18px\"\n        type=\"submit\"\n        paddingX=\"20px\"\n        paddingY=\"12px\"\n        w=\"160px\"\n        borderColor=\"#89d3da\"\n        borderWidth=\"1px\"\n        color=\"#192655\"\n        _hover={{ bg: '#0cc0df', borderColor: 'transparent', color: '#fff' }}\n      >\n        {!isContactAdded ? (\n          <CircularProgress isIndeterminate size=\"24px\" color=\"#188C69\" />\n        ) : (\n          'Add contact'\n        )}\n      </Button>\n    </Box>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst LoaderSpinner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"#192655\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"32\"\n      visible={true}\n    />\n  );\n};\n\nexport default LoaderSpinner;","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 4px;\n  input {\n    max-width: 200px;\n    border: none;\n    border-radius: 20px;\n    padding-left: 10px;\n  }\n\n  .saveButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    border: 2px solid #007bff;\n    transition: all 0.3s ease-in-out;\n    font-size: 22px;\n    color: #007bff;\n    &:hover,\n    &:focus {\n      background-color: #007bff;\n      color: white;\n      box-shadow: 0px 0px 10px 5px rgba(0, 0, 255, 0.4);\n    }\n  }\n\n`;","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { VscSaveAs } from 'react-icons/vsc';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport * as yup from 'yup';\nimport { FormStyled } from './EditedContact.styled';\n\n\n\n\nconst schema = yup\n  .object({\n    name: yup.string().min(3).max(32).required(),\n    number: yup.string().min(3).max(16).required(),\n  })\n  .required();\n\nconst EditContact = ({ id, toggleEdit, name, number }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: { name, number },\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }) => {\n    const newContact = {\n      name,\n      number,\n      id,\n    };\n    dispatch(editContact(newContact));\n\n    toggleEdit();\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <input type=\"text\" {...register('name')} autoFocus autoComplete=\"name\" />\n\n      <input type=\"text\" {...register('number')} autoComplete=\"number\" />\n      <button className=\"saveButton\" type=\"submit\">\n        <VscSaveAs />\n      </button>\n    </FormStyled>\n  );\n};\n\nexport default EditContact;\n","import { useDispatch } from 'react-redux';\nimport { LuClipboardEdit } from 'react-icons/lu';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Flex,\n  HStack,\n  VStack,\n  Avatar,\n  Text,\n  Circle,\n  Icon,\n} from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport LoaderSpinner from 'components/Loader/Loader';\nimport EditContact from 'components/EditedContact/EditedContact';\n\nexport const ContactElement = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isDelete, setIsDelete] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const onDelete = id => {\n    setIsDelete(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => setIsDelete(false));\n  };\n  const toggleEdit = () => {\n    setIsEdit(!isEdit);\n  };\n  const firstLetter = name.charAt(0);\n\n  return (\n    <Flex\n      as=\"li\"\n      borderBottom=\"1px\"\n      paddingY=\"8px\"\n      justify=\"space-between\"\n      align=\"center\"\n    >\n      {isEdit ? (\n        <EditContact\n          id={id}\n          toggleEdit={toggleEdit}\n          name={name}\n          number={number}\n        />\n      ) : (\n        <>\n          <HStack>\n            <Avatar\n              name={firstLetter}\n              color=\"white\"\n              w={{ base: '30px', md: '50px' }}\n              h={{ base: '30px', md: '50px' }}\n              borderRadius=\"50%\"\n              bg=\"#80B3FF\"\n            />\n            <VStack\n              justify=\"flex-start\"\n              align=\"self-start\"\n              minW=\"100px\"\n              mr=\"10px\"\n            >\n              <Text\n                fontFamily=\"Merriweather Sans\"\n                fontWeight={300}\n                fontSize={{ base: '14px', md: '18px' }}\n              >\n                {name}\n              </Text>\n              <Text\n                fontFamily=\"Merriweather Sans\"\n                fontWeight={300}\n                fontSize={{ base: '14px', md: '18px' }}\n              >\n                {number}\n              </Text>\n            </VStack>\n          </HStack>\n          <HStack justify=\"flex-end\" align=\"self-end\">\n            <Circle\n              size={{ base: '30px', md: '50px' }}\n              bg=\"#80B3FF\"\n              color=\"white\"\n              type=\"button\"\n              onClick={toggleEdit}\n              _hover={{\n                bg: '#0cc0df',\n                borderColor: 'transparent',\n                color: '#fff',\n              }}\n            >\n              <Icon as={LuClipboardEdit} w={5} h={5} color=\"white\" />\n            </Circle>\n            <Circle\n              size={{ base: '30px', md: '50px' }}\n              bg=\"#80B3FF\"\n              color=\"white\"\n              type=\"button\"\n              disabled={isDelete}\n              onClick={() => onDelete(id)}\n              _hover={{\n                bg: '#0cc0df',\n                borderColor: 'transparent',\n                color: '#fff',\n              }}\n            >\n              {isDelete ? <LoaderSpinner /> : <DeleteIcon />}\n            </Circle>\n          </HStack>\n        </>\n      )}\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactElement } from 'components/ContactElement/ContactElement';\nimport { UnorderedList } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <UnorderedList paddingX=\"10px\" m=\"0\">\n      {contacts?.map(({ id, name, number }) => {\n        return <ContactElement key={id} id={id} name={name} number={number} />;\n      })}\n    </UnorderedList>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\nimport { Text, VStack, Input } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    return dispatch(setFilterValue(event.target.value));\n  };\n\n  return (\n    <VStack gap=\"5px\" justify=\"space-between\" mb=\"5px\">\n      <Text\n        fontFamily=\"Merriweather Sans\"\n        fontWeight={300}\n        fontSize={{ base: '18px', md: '24px' }}\n        color=\"#497a86\"\n      >\n        Find contacts by name:\n      </Text>\n      <Input\n        maxW=\"600px\"\n        w=\"100%\"\n        minW=\"200px\"\n        marginInlineStart=\"0px\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n        borderColor=\"#89d3da\"\n        borderWidth=\"1px\"\n        bg=\"#fff\"\n      />\n    </VStack>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport emptyImg from '../../images/emptyImg.png';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  Box,\n  Heading,\n  Container,\n  CircularProgress,\n  Text,\n  Image,\n  Center,\n} from '@chakra-ui/react';\nimport { useMediaQuery } from 'react-responsive';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1190px)' });\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"main\"\n      bg=\"#98b7d545\"\n      // h=\"100vh\"\n    >\n      <Container maxW=\"100%\" marginX=\"auto\" paddingX=\"10px\" bg=\"#98b7d545\">\n        <Heading\n          align=\"center\"\n          pt=\"10px\"\n          mb=\"10px\"\n          fontFamily=\"Merriweather Sans\"\n          fontWeight={400}\n          fontSize={isTabletOrMobile ? '18px' : '30px'}\n          color=\"#497a86\"\n        >\n          Welcom in your Personal Phonebook\n        </Heading>\n        <Box gap=\"5px\" justifyItems=\"center\" display=\"grid\">\n          <Heading\n            align=\"center\"\n            fontFamily=\"Merriweather Sans\"\n            fontWeight={400}\n            fontSize={isTabletOrMobile ? '16px' : '28px'}\n            color=\"#497a86\"\n          >\n            Please, input name & number for a creation a new contact\n          </Heading>\n          <ContactForm />\n          <Box padding=\"10px\" maxWidth=\"660px\" minWidth=\"200px\" width=\"100%\">\n            <Heading\n              align=\"center\"\n              fontFamily=\"Merriweather Sans\"\n              fontWeight=\"bold\"\n              fontSize={isTabletOrMobile ? '18px' : '28px'}\n              mb=\"10px\"\n              color=\"#497a86\"\n            >\n              Contacts\n            </Heading>\n            {contacts?.length === 0 ? (\n              <Center flexDirection=\"column\">\n                <Text\n                  fontWeight=\"bold\"\n                  color=\"#497a86\"\n                  fontFamily=\"Merriweather Sans\"\n                  fontSize={isTabletOrMobile ? '18px' : '24px'}\n                  mb=\"10px\"\n                >\n                  ...Here is empty\n                </Text>\n                <Image\n                  src={emptyImg}\n                  alt=\"empty image\"\n                  boxSize=\"150px\"\n                  fill=\"#497a86\"\n                />\n              </Center>\n            ) : (\n              <div>\n                {isLoading && (\n                  <CircularProgress\n                    isIndeterminate\n                    size=\"24px\"\n                    color=\"#0cc0df\"\n                  />\n                )}\n                {!isLoading && contacts.length > 0 && <Filter />}\n\n                {error && <p>Something goes wrong</p>}\n                {!isLoading && contacts.length > 0 && (\n                  <Box overflowY=\"auto\" h=\"230px\">\n                    <ContactList />\n                  </Box>\n                )}\n              </div>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsContactAdded = state => state.contacts.isContactAdded;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return filteredContacts;\n  }\n);\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","isContactAdded","selectIsContactAdded","dispatch","useDispatch","toast","useToast","handleChange","event","_event$target","target","value","_jsxs","Box","as","maxWidth","width","minWidth","padding","onSubmit","preventDefault","form","elements","find","contact","position","render","color","p","bg","borderRadius","textAlign","children","some","isNumberDublicated","addContact","reset","FormControl","isRequired","mb","_jsx","FormLabel","fontFamily","fontWeight","fontSize","base","md","Input","type","onChange","pattern","title","borderColor","borderWidth","required","autoComplete","placeholder","Button","paddingX","paddingY","w","_hover","CircularProgress","isIndeterminate","size","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","FormStyled","styled","_templateObject","_taggedTemplateLiteral","schema","yup","min","max","_ref","id","toggleEdit","_useForm","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","_ref2","newContact","editContact","_objectSpread","autoFocus","className","VscSaveAs","ContactElement","isDelete","setIsDelete","isEdit","setIsEdit","firstLetter","charAt","Flex","borderBottom","justify","align","EditContact","_Fragment","HStack","Avatar","h","VStack","minW","mr","Text","Circle","onClick","Icon","LuClipboardEdit","disabled","deleteContact","unwrap","then","onDelete","LoaderSpinner","DeleteIcon","ContactList","selectVisibleContacts","UnorderedList","m","map","Filter","gap","maxW","marginInlineStart","setFilterValue","Contacts","error","selectError","isLoading","selectIsLoading","isTabletOrMobile","useMediaQuery","query","useEffect","fetchContacts","Container","marginX","Heading","pt","justifyItems","display","length","Center","flexDirection","Image","src","emptyImg","alt","boxSize","fill","overflowY","state","items","createSelector","filter","normalizedFilter","toLowerCase","includes"],"sourceRoot":""}